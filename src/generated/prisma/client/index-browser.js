
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  agentconnect_info: 'agentconnect_info',
  nom: 'nom',
  prenom: 'prenom',
  poste: 'poste',
  nom_etablissement: 'nom_etablissement',
  siren_info: 'siren_info',
  created_at: 'created_at',
  updated_at: 'updated_at',
  canal_acquisition: 'canal_acquisition',
  discardedInformation: 'discardedInformation',
  accept_communication_produit: 'accept_communication_produit'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.CollectiviteScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  code_insee: 'code_insee',
  code_postal: 'code_postal',
  adresse_info: 'adresse_info',
  adresse_all_infos: 'adresse_all_infos',
  ban_id: 'ban_id',
  latitude: 'latitude',
  longitude: 'longitude',
  created_by: 'created_by',
  created_at: 'created_at',
  aides_territoires_perimeter_id: 'aides_territoires_perimeter_id'
};

exports.Prisma.User_projetScalarFieldEnum = {
  id: 'id',
  email_address: 'email_address',
  role: 'role',
  projet_id: 'projet_id',
  user_id: 'user_id',
  created_at: 'created_at',
  invitation_token: 'invitation_token',
  invitation_status: 'invitation_status',
  deleted_at: 'deleted_at',
  deleted_by: 'deleted_by',
  nb_views: 'nb_views',
  last_viewed_at: 'last_viewed_at'
};

exports.Prisma.EmailScalarFieldEnum = {
  id: 'id',
  destination_address: 'destination_address',
  type: 'type',
  sending_time: 'sending_time',
  brevo_id: 'brevo_id',
  email_status: 'email_status',
  user_projet_id: 'user_projet_id',
  user_id: 'user_id',
  extra: 'extra'
};

exports.Prisma.User_collectiviteScalarFieldEnum = {
  user_id: 'user_id',
  collectivite_id: 'collectivite_id',
  verified: 'verified',
  created_at: 'created_at'
};

exports.Prisma.ProjetScalarFieldEnum = {
  id: 'id',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  nom: 'nom',
  type_espace: 'type_espace',
  adresse: 'adresse',
  niveau_maturite: 'niveau_maturite',
  adresse_info: 'adresse_info',
  adresse_all_infos: 'adresse_all_infos',
  date_echeance: 'date_echeance',
  fiches_solutions_id: 'fiches_solutions_id',
  fiches_diagnostic_id: 'fiches_diagnostic_id',
  collectiviteId: 'collectiviteId',
  recommandations_viewed_by: 'recommandations_viewed_by',
  deleted_at: 'deleted_at',
  deleted_by: 'deleted_by',
  is_public: 'is_public',
  budget: 'budget',
  sourcing_rex: 'sourcing_rex'
};

exports.Prisma.Projet_ficheScalarFieldEnum = {
  id: 'id',
  projet_id: 'projet_id',
  fiche_id: 'fiche_id',
  type: 'type',
  created_at: 'created_at',
  user_id: 'user_id'
};

exports.Prisma.Projet_sourcing_contactScalarFieldEnum = {
  id: 'id',
  projet_id: 'projet_id',
  sourced_user_projet_id: 'sourced_user_projet_id',
  created_at: 'created_at',
  created_by: 'created_by'
};

exports.Prisma.EstimationScalarFieldEnum = {
  id: 'id',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  projet_id: 'projet_id',
  fiches_solutions_id: 'fiches_solutions_id',
  materiaux: 'materiaux',
  deleted_at: 'deleted_at',
  deleted_by: 'deleted_by'
};

exports.Prisma.ClimadiagScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  type_lieu: 'type_lieu',
  code_insee: 'code_insee',
  code_postal: 'code_postal',
  epci_parent_id: 'epci_parent_id',
  jours_tres_chauds_ref: 'jours_tres_chauds_ref',
  jours_tres_chauds_prevision: 'jours_tres_chauds_prevision',
  nuits_chaudes_ref: 'nuits_chaudes_ref',
  nuits_chaudes_prevision: 'nuits_chaudes_prevision',
  jours_vdc_ref: 'jours_vdc_ref',
  jours_vdc_prevision: 'jours_vdc_prevision',
  population: 'population',
  superficie: 'superficie',
  couverture_lcz: 'couverture_lcz',
  adresse_all_infos: 'adresse_all_infos'
};

exports.Prisma.AideScalarFieldEnum = {
  id: 'id',
  aideTerritoireId: 'aideTerritoireId',
  submission_deadline: 'submission_deadline',
  type: 'type',
  name: 'name',
  financers: 'financers'
};

exports.Prisma.Estimations_aidesScalarFieldEnum = {
  id: 'id',
  estimationId: 'estimationId',
  aideId: 'aideId',
  created_at: 'created_at',
  user_id: 'user_id'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  ragtimeId: 'ragtimeId',
  created_at: 'created_at'
};

exports.Prisma.Diagnostic_simulationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  projet_id: 'projet_id',
  initial_values: 'initial_values',
  validated: 'validated',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AnalyticsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  reference_id: 'reference_id',
  reference_type: 'reference_type',
  event_type: 'event_type',
  context: 'context',
  user_id: 'user_id'
};

exports.Prisma.Cron_jobsScalarFieldEnum = {
  id: 'id',
  execution_start_time: 'execution_start_time',
  execution_end_time: 'execution_end_time',
  job_type: 'job_type'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.AccountOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  image: 'image',
  nom: 'nom',
  prenom: 'prenom',
  poste: 'poste',
  nom_etablissement: 'nom_etablissement',
  canal_acquisition: 'canal_acquisition',
  discardedInformation: 'discardedInformation'
};

exports.Prisma.VerificationTokenOrderByRelevanceFieldEnum = {
  identifier: 'identifier',
  token: 'token'
};

exports.Prisma.collectiviteOrderByRelevanceFieldEnum = {
  nom: 'nom',
  code_insee: 'code_insee',
  code_postal: 'code_postal',
  ban_id: 'ban_id',
  created_by: 'created_by',
  aides_territoires_perimeter_id: 'aides_territoires_perimeter_id'
};

exports.Prisma.user_projetOrderByRelevanceFieldEnum = {
  email_address: 'email_address',
  user_id: 'user_id',
  invitation_token: 'invitation_token',
  deleted_by: 'deleted_by'
};

exports.Prisma.emailOrderByRelevanceFieldEnum = {
  id: 'id',
  destination_address: 'destination_address',
  brevo_id: 'brevo_id',
  user_id: 'user_id'
};

exports.Prisma.user_collectiviteOrderByRelevanceFieldEnum = {
  user_id: 'user_id'
};

exports.Prisma.projetOrderByRelevanceFieldEnum = {
  created_by: 'created_by',
  nom: 'nom',
  type_espace: 'type_espace',
  adresse: 'adresse',
  niveau_maturite: 'niveau_maturite',
  recommandations_viewed_by: 'recommandations_viewed_by',
  deleted_by: 'deleted_by'
};

exports.Prisma.projet_ficheOrderByRelevanceFieldEnum = {
  user_id: 'user_id'
};

exports.Prisma.projet_sourcing_contactOrderByRelevanceFieldEnum = {
  created_by: 'created_by'
};

exports.Prisma.estimationOrderByRelevanceFieldEnum = {
  created_by: 'created_by',
  deleted_by: 'deleted_by'
};

exports.Prisma.climadiagOrderByRelevanceFieldEnum = {
  nom: 'nom',
  code_insee: 'code_insee',
  code_postal: 'code_postal'
};

exports.Prisma.aideOrderByRelevanceFieldEnum = {
  type: 'type',
  name: 'name',
  financers: 'financers'
};

exports.Prisma.estimations_aidesOrderByRelevanceFieldEnum = {
  user_id: 'user_id'
};

exports.Prisma.conversationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  ragtimeId: 'ragtimeId'
};

exports.Prisma.diagnostic_simulationOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.AnalyticsOrderByRelevanceFieldEnum = {
  id: 'id',
  user_id: 'user_id'
};

exports.Prisma.cron_jobsOrderByRelevanceFieldEnum = {
  id: 'id'
};
exports.RoleProjet = exports.$Enums.RoleProjet = {
  ADMIN: 'ADMIN',
  EDITEUR: 'EDITEUR',
  LECTEUR: 'LECTEUR'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  REQUESTED: 'REQUESTED',
  INVITED: 'INVITED',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED'
};

exports.emailType = exports.$Enums.emailType = {
  projetCreation: 'projetCreation',
  projetInvitation: 'projetInvitation',
  projetRequestAccess: 'projetRequestAccess',
  projetAccessGranted: 'projetAccessGranted',
  projetAccessDeclined: 'projetAccessDeclined',
  contactMessageSent: 'contactMessageSent',
  welcomeMessage: 'welcomeMessage',
  noActivityAfterSignup: 'noActivityAfterSignup',
  remindNotCompletedDiagnostic: 'remindNotCompletedDiagnostic'
};

exports.emailStatus = exports.$Enums.emailStatus = {
  PENDING: 'PENDING',
  ERROR: 'ERROR',
  SUCCESS: 'SUCCESS'
};

exports.FicheType = exports.$Enums.FicheType = {
  DIAGNOSTIC: 'DIAGNOSTIC',
  SOLUTION: 'SOLUTION'
};

exports.TypeLieuClimadiag = exports.$Enums.TypeLieuClimadiag = {
  commune: 'commune',
  epci: 'epci'
};

exports.ReferenceType = exports.$Enums.ReferenceType = {
  USER: 'USER',
  PROJET: 'PROJET',
  ESTIMATION: 'ESTIMATION'
};

exports.EventType = exports.$Enums.EventType = {
  UPDATE_MATURITE: 'UPDATE_MATURITE',
  UPDATE_PROJET_SET_VISIBLE: 'UPDATE_PROJET_SET_VISIBLE',
  UPDATE_PROJET_SET_INVISIBLE: 'UPDATE_PROJET_SET_INVISIBLE'
};

exports.JobType = exports.$Enums.JobType = {
  SYNC_HUBSPOT: 'SYNC_HUBSPOT',
  CSM_MAIL_BATCH: 'CSM_MAIL_BATCH',
  SYNC_CONNECT: 'SYNC_CONNECT'
};

exports.Prisma.ModelName = {
  Account: 'Account',
  User: 'User',
  VerificationToken: 'VerificationToken',
  collectivite: 'collectivite',
  user_projet: 'user_projet',
  email: 'email',
  user_collectivite: 'user_collectivite',
  projet: 'projet',
  projet_fiche: 'projet_fiche',
  projet_sourcing_contact: 'projet_sourcing_contact',
  estimation: 'estimation',
  climadiag: 'climadiag',
  aide: 'aide',
  estimations_aides: 'estimations_aides',
  conversation: 'conversation',
  diagnostic_simulation: 'diagnostic_simulation',
  Analytics: 'Analytics',
  cron_jobs: 'cron_jobs'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
